---
# Global benchmarking options.
global:

  # Global hyperfine option defaults.
  # Will be overwritten by local options specified per-benchmark.
  hyperfine:
    warmup: 1
    runs: 5
    export_json: results.json
    shell: /bin/bash
    show_output: false

  # A command to wrap the hyperfine command.
  wrapper: "taskset -c 1-14"

  # Path to source code (required).
  # Can point to a local or online fork of bitcoin/bitcoin.
  source: $HOME/src/core/bitcoin

  # Which branch of the source to check out (required).
  branch: benchmark-test

  # Commits to build binaries from (required).
  # A list of one or more all found in <branch>
  commits: ["62bd1960fdf", "e932c6168b5"]

  # A temporary datadir for Bitcoin Core to use
  tmp_data_dir: /tmp/benchkit

# Local benchmark config.
benchmarks:

  # benchmark name (required).
  - name: "Check bitcoind version"

    # Bitcoin network to run on (main, test, testnet4, signet, regtest)
    network: signet

    # Local hyperfine options.
    # These override global hyperfine options in case of conflict.
    # Uses regular hyperfine syntax.
    hyperfine:

      # The correct binary for the [commit] will be substituted and the (bitcoin) [network] applied automatically.
      # {dbcache} is an explicit (additional) parameterisation from [parameter_lists] below.
      command: "bitcoind -dbcache={dbcache} --version"
      warmup: 5
      runs: 10

      # These have "sane" defaults in benchkit, but can point to any command or script too
      # setup:
      # conclude:
      # prepare:
      # cleanup:

      # A list of zero or more parameters.
      # These will be tried as a matrix.
      parameter_lists:

        # The variable name to use in hyperfine command substitution.
        - var: dbcache
          # A list of values to substitute in.
          values: ["450", "32000"]

